const canvSize = 175;
const canvTextSize = 48;
const canvas = new DrawContext();
canvas.opaque = false;
const batteryCircleRemainColor = new Color('#00ff00'); //Battery remaining color
const batteryCircleDepletedColor = new Color('#ff0000'); //Battery depleted color
const batteryCircleBGColor = new Color('#FFFFFF00'); //Widget background color
const batteryCircleTextColor = new Color('#ffffff'); //Widget text color (use same color as above to hide text)


const remainColor = new Color('#FFFFFF')
const canvWidth = 14; //Battery circle thickness
const canvRadius = 75; //Battery circle radius
canvas.size = new Size(canvSize, canvSize);
canvas.respectScreenScale = true;

const battery = Device.batteryLevel()


/*
BEGIN Widget Layout
*/

let widget = new ListWidget();
widget.setPadding(0,0,0,0);

stack1 = widget.addStack()
stack1.layoutHorizontally()

drawArc(
  Math.floor(battery * 100 * 3.6),
  batteryCircleRemainColor,
  batteryCircleDepletedColor,
  Math.floor(battery * 100).toString() + "%",
  batteryCircleTextColor
)

stack1.addImage(canvas.getImage())


function sinDeg(deg) {
  return Math.sin((deg * Math.PI) / 180);
}

function cosDeg(deg) {
  return Math.cos((deg * Math.PI) / 180);
}

function drawArc(deg, fillColor, strokeColor, text, txtColor) {
  let ctr = new Point(canvSize / 2, canvSize / 2),
  bgx = ctr.x - canvRadius;
  bgy = ctr.y - canvRadius;
  bgd = 2 * canvRadius;
  bgr = new Rect(bgx, bgy, bgd, bgd);

  canvas.setFillColor(fillColor);
  canvas.setStrokeColor(strokeColor);
  canvas.setLineWidth(canvWidth);
  canvas.strokeEllipse(bgr);

  for (t = 0; t < deg; t++) {
    rect_x = ctr.x + canvRadius * sinDeg(t) - canvWidth / 2;
    rect_y = ctr.y - canvRadius * cosDeg(t) - canvWidth / 2;
    rect_r = new Rect(rect_x, rect_y, canvWidth, canvWidth);
    canvas.fillEllipse(rect_r);
  }
  // attempt to draw info text
  const canvTextRect = new Rect(
    0,
    70 - canvTextSize / 4,
    canvSize,
    canvTextSize
  );
  canvas.setTextAlignedCenter();
  canvas.setTextColor(txtColor);
  canvas.setFont(Font.mediumSystemFont(canvTextSize));
  canvas.drawTextInRect(text, canvTextRect);

  // return canvas.getImage()
}

const nobg = importModule('no-background.js')
widget.backgroundImage = await nobg.getSlice('medium-top')


Script.setWidget(widget);
widget.presentSmall();
Script.complete();
